#include<stdio.h>
#define max(a,b) a>b?a:b
int D[100][100];
int Fill_D(int n,int C,int w[],int v[]){
	int i,j;
	for(i=1;i<=n;i++)
		for(j=1;j<=C;j++)
			if(j<w[i]) D[i][j] = D[i-1][j];
			else D[i][j] = max(D[i-1][j],D[i-1][j-w[i]]+v[i]);
	return 1;
}
void knapsack(int n,int C,int w[],int v[],int x[]){
	int i,j;
	Fill_D(n,C,w,v);
	i=n;j=C;
	while(i>0)
		if(D[i][j] == D[i-1][j]){
			x[i] = 0;
			i--;
		}
		else{
			x[i] = 1;
			j-=w[i];
			i--;
		}
}

int main(){
	int n = 5,C=100,x[100],w[]={77,22,29,50,99},v[]={92,22,87,46,90};
	int i,j;
	knapsack(n,C,w,v,x);
	for(i=0;i<n;i++)
		for(j=0;j<n;j++)
			printf("%d ",D[i][j]);
	return 0;
}
